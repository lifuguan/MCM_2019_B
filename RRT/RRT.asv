
source=[455 1314 ]; % source position in Y, X format
goal=[266 1498]; % goal position in Y, X format

cities = [
    % 338, 120;
    452, 116;
    % 564,  799;  548, 1064;
    % 607,  523;  394,  502;
    % 203,  484;  838,  458;
    % 123,  450;  1012, 425;
    % 1328, 389;  123,  339;
    % 943,  312;  1129, 285;
    % 525,  279;  372,  249;
    % 1483, 220;  878,  208;
    % 225,  194;  1162, 194;
    % 1066, 190;  1033, 157;
    % 115 ,  118;  743,  117;
    % 1145, 110;  814,  107;
    % 928 ,   94;  1072,  88;
    % 512 ,   82;  313,   80
];

[455,1314,-1;455,1304,1;455,1294,2;452,1284,3;457,1324,1;465,1291,3;449,1330,5;457,1275,4;440,1335,7;430,1337,9;420,1334,10;410,1334,11;402,1328,12;408,1344,12;394,1322,13;384,1322,15;402,1352,14;378,1314,16;368,1312,18;363,1303,19;394,1358,17;361,1293,20;394,1368,21;352,1288,22;342,1288,24;334,1294,25;326,1300,26;446,1343,9;320,1292,27;371,1291,22;312,1286,29;312,1276,31;312,1266,32;313,1256,33;308,1247,34;309,1237,35;310,1227,36;392,1378,23;475,1291,6;298,1249,35;288,1248,40;393,1388,38;278,1247,41;273,1238,43;387,1396,42;270,1228,44;269,1218,46;270,1208,47;262,1202,48;264,1192,49;252,1200,49;377,1398,45;482,1283,39;270,1253,43;490,1277,53;500,1275,55;505,1266,56;505,1256,57;377,1408,52;367,1410,59;319,1237,36;362,1419,60;353,1424,62;376,1282,30;260,1251,54;347,1432,63;269,1263,54;250,1252,65;300,1227,37;515,1256,58;378,1304,18;240,1254,68;346,1442,66;327,1231,61;336,1442,73;326,1441,75;232,1260,72;233,1270,77;223,1273,78;213,1271,79;317,1305,27;260,1223,47;204,1266,80;410,1321,13;194,1263,83;194,1273,85;503,1285,56;188,1255,85;320,1315,81;283,1237,44;324,1451,76;178,1257,88;177,1267,92;173,1248,92;168,1239,94;337,1233,74;375,1272,64;318,1459,91;160,1233,95;279,1219,47;171,1275,93;158,1223,99;318,1469,98;152,1215,102;150,1205,104;148,1195,105;148,1185,106;148,1175,107;148,1165,108;151,1155,109;154,1145,110;157,1135,111;160,1125,112;158,1115,113;310,1476,103;302,1482,115;138,1175,108;293,1487,116;345,1418,63;283,1489,118;273,1489,120;128,1173,117;263,1488,121;161,1277,101;118,1175,122;258,1497,123;254,1483,123;345,1227,96;158,1186,107;244,1483,127;299,1495,118;396,1312,15;110,1181,125;168,1114,114;171,1104,134;174,1094,135;234,1486,130;224,1487,137;308,1500,131;365,1270,97;216,1493,138;363,1280,140;168,1185,129;355,1224,128;173,1285,101;222,1477,138;335,1417,119;126,1163,122;524,1261,70;365,1223,144;325,1414,147;280,1499,120;530,1253,149;532,1243,153;384,1355,21;196,1248,88;533,1233,154;328,1321,89;117,1158,148;110,1150,159;105,1141,160;177,1190,143;181,1291,145;187,1299,163;181,1307,164;102,1131,161;532,1267,149;212,1474,146;164,1147,111;315,1415,151;202,1476,168;326,1331,158;255,1242,65;374,1354,155;185,1184,162;366,1322,19;356,1265,140;364,1355,174;538,1275,167;267,1502,126;151,1274,124;263,1271,67;176,1120,134;208,1499,141;490,1267,55;198,1502,184;482,1261,185;255,1265,182;465,1315,1;184,1126,183;187,1315,165;141,1271,181;540,1253,153;181,1323,191;299,1217,69;326,1404,151;162,1099,135;153,1094,197;152,1084,198;354,1358,178;173,1329,194;171,1308,165;163,1331,201;131,1274,192;196,1320,191;412,1311,84;550,1253,193;539,1285,179;123,1280,204;102,1121,166;560,1253,207;382,1387,45;250,1224,82;197,1238,156;240,1244,72;174,1148,169;178,1338,201;418,1303,206;336,1333,172;265,1281,182;381,1294,30;148,1117,114;150,1104,198;346,1262,177;140,1206,105;153,1332,203;184,1147,216;200,1228,214;181,1279,145;194,1148,227;132,1200,225;206,1322,205;299,1207,195;112,1129,166;560,1243,211;474,1320,189;240,1222,213;275,1479,121;184,1346,217;140,1102,223;121,1134,234;210,1227,228;158,1243,99;480,1251,187;478,1241,244;479,1329,236;143,1331,226;396,1344,17;134,1094,240;315,1405,170;445,1312,1;127,1086,249;560,1233,235;560,1223,253;561,1213,254;562,1203,255;556,1195,256;556,1185,257;557,1175,258;557,1165,259;138,1112,240;551,1157,260;550,1147,262;334,1427,147;135,1158,148;541,1142,263;532,1137,266;115,1274,209;345,1363,200;556,1139,263;127,1076,252;128,1066,271;130,1056,272;138,1050,273;141,1040,274;143,1030,275;143,1020,276;152,1015,277;152,1005,278;154,995,279;557,1129,270;153,985,280;153,975,282;154,965,283;260,1212,49;146,958,284;152,950,286;152,940,287;151,930,288;383,1332,16;469,1236,245;151,920,289;149,910,292;158,905,293;164,995,280;305,1405,250;136,957,286;168,904,294;464,1227,291;176,898,298;186,896,300;188,886,301;118,1091,252;374,1262,97;257,1287,220;162,1018,278;170,987,295;178,1200,162;304,1198,233;295,1407,296;180,987,307;305,1188,309;567,1130,281;170,1025,306;230,1246,215;568,1120,313;305,1178,312;120,1123,234;480,1339,246;305,1168,317;310,1159,320;129,949,297;195,1158,230;133,1018,277;198,888,302;118,1064,272;296,1163,320;310,1149,321;178,1019,314;302,1143,328;340,1372,269;308,1135,330;188,1019,329;315,1178,317;208,885,325;211,875,335;217,867,336;217,890,335;526,1145,267;223,859,337;225,849,340;219,841,341;218,831,342;224,823,343;227,813,344;230,803,345;323,1185,334;233,793,346;191,1029,333;110,1115,210;314,1127,332;225,787,348;224,777,352;517,1140,339;221,767,353;217,1281,79;322,1121,351;330,1374,331;558,1117,316;178,1354,239;529,1282,208;465,1217,299;508,1145,354;204,1148,230;558,1107,359;223,898,338;208,829,343;170,1206,308;123,1017,324;233,898,366;297,1417,310;559,1097,365;225,1287,356;553,1089,372;329,1193,347;197,1138,230;141,1060,274;332,1121,357;255,1297,305;153,1029,276;300,1129,332;162,938,288;118,1008,369;220,1244,315;333,1111,378;203,1165,323;260,1233,173;342,1121,378;559,1081,374;487,1292,53;560,1071,389;560,1061,391;561,1051,392;323,1254,34;503,1136,363;339,1103,385;260,1306,379;173,1035,314;345,1095,396;474,1347,319;351,1126,388;342,1085,399;172,1362,360;494,1141,395;332,1396,196;359,1132,401;334,1079,402;369,1253,304;336,1382,358;339,1192,375;332,1364,358;144,1142,111;550,1063,392;102,1109,350;342,1341,219;204,1130,376;102,1156,160;150,1065,377;201,1031,349;190,1039,349;428,1302,218;143,987,282;182,1045,420;571,1053,393;275,1469,238;576,1044,424;574,1034,426;287,1418,371;160,1063,418;569,1083,389;133,1329,247;320,1135,351;171,1318,202;577,1024,427;576,1014,434;568,1008,435;569,998,436;558,1007,436;572,988,437;550,1000,438;572,978,439;464,1344,400;569,968,441;214,780,353;582,978,441;102,1166,417;349,1195,410;563,960,443;563,950,448;205,775,444;195,777,450;178,1370,403;185,775,451;94,1172,446;352,1340,415;234,908,370;210,1026,419;540,1001,440;188,1369,452;342,1072,407;206,1120,416;240,916,456;532,995,458;352,1070,460;196,1047,420;565,940,449;566,930,466;566,920,467;566,910,468;563,900,469;523,990,463;231,769,355;564,890,470;133,985,422;564,880,473;553,900,470;218,1020,457;543,898,476;555,875,475;533,898,478;216,1117,461;213,1167,386;142,941,288;221,1161,482;162,1200,368;227,1153,484;528,1292,361;523,900,480;350,1060,464;228,1018,477;331,1248,394;135,1319,431;179,977,311;346,1383,409;234,1026,490;352,1050,489;185,969,493;185,785,453;235,925,462;207,1239,214;257,1184,50;203,820,367;181,1380,452;128,1289,209;226,1115,481;179,1135,190;193,820,502;299,1153,327;362,1051,496;110,1265,268;326,1143,432;252,1312,397;560,866,479;559,856,513;247,1181,501;427,1292,421;115,1023,369;567,850,514;567,840,518;426,1282,516;567,830,519;295,1180,317;97,1100,414;172,937,382;348,1393,494;105,1025,517;187,1205,308;235,1147,486;334,1354,411;570,820,521;570,810,530;200,1466,171;571,800,531;368,1332,176;117,1107,350;227,1105,505;183,959,497;255,1322,512;549,854,514;228,1034,495;236,1040,540;170,1175,143;359,1193,447;281,1426,428;110,1255,510;561,799,533;561,789,546;559,779,547;91,1092,523;206,1312,232;138,1134,412;551,773,548;175,785,498;549,763,552;548,753,554;547,743,555;546,733,556;544,723,557;541,713,558;542,703,559;540,693,560;93,1182,454;224,1095,536;244,1306,512;127,1313,492;460,1208,362;132,939,322;146,1128,551;165,786,553;541,775,552;531,777,570;228,1139,528;155,786,569;145,784,573;239,1050,541;246,1038,541;135,786,574;556,808,546;234,1307,564;162,1084,199;548,814,578;183,823,507;320,1156,321;237,1183,515;200,1456,532;526,980,471;552,702,560;230,1225,237;211,1484,168;220,1145,572;171,1079,580;549,1122,359;541,1068,413;145,1074,418;245,1150,528;367,1345,178;270,1304,397;241,933,499;180,943,524;205,1175,386;173,824,582;197,1204,527;195,1447,585;109,1015,517;138,1186,107;369,1190,543;531,1066,593;212,1012,477;149,900,293;528,1056,607;339,1202,410;125,785,577;461,1198,566;112,1245,545;126,931,567;115,784,612;114,774,616;114,764,617;149,890,609;113,754,618;110,744,620;112,734,621;116,932,615;352,1375,494;114,724,622;117,714,625;113,794,616;116,704,626;111,695,628;116,686,629;121,677,630;120,667,631;121,657,632;121,647,633;127,639,634;125,629,635;125,619,636;125,609,637;122,599,638;121,589,639;112,602,639;120,579,640;518,1057,610;121,569,642;122,559,644;128,551,645;137,546,646;437,1292,516;147,548,647;112,558,645;516,977,586;178,1009,329;525,785,571;102,555,650;111,650,634;111,804,627;101,653,655;127,716,626;265,1295,597;365,1124,406;374,1119,660;112,548,650;538,907,480;190,1438,603;171,1216,368;548,909,663;180,1439,664;181,1078,591;507,972,651;515,786,653;110,538,662;107,528,671;505,788,670;112,519,672;497,973,669;106,930,623;379,1189,606;106,511,674;104,501,678;139,890,619;131,1038,275;318,1482,115;104,491,679;102,481,683;178,1390,503;100,745,621;104,471,684;495,963,675;103,461,687;184,1215,527;101,451,689;96,928,676;109,445,691;118,440,693;92,482,684;221,1126,481;250,938,598;108,814,656;384,1117,661;469,1246,291;98,812,698;88,811,701;135,609,638;503,957,688;108,824,698;93,737,686;249,948,697;260,939,697;196,1117,461;266,931,708;122,737,622;188,1391,685;132,923,615;205,1198,602;101,1009,604;104,436,693;94,499,679;122,519,674;497,1293,87;468,1328,236;397,1302,132;90,920,692;132,1212,225;108,680,630;271,922,710;132,1008,324;488,978,675;189,1428,664;538,813,581;387,1183,677;487,957,688;95,911,722;87,905,732;277,1459,425;242,1296,564;502,778,673;281,921,725;492,778,736;484,784,738;126,689,630;114,832,705;336,1141,511;94,469,687;336,1260,224;84,466,743;392,1110,699;76,460,745;484,794,739;95,1192,562;191,1176,175;84,502,717;85,512,751;89,895,733;101,663,657;175,1166,542;177,1400,685;82,483,695;132,738,711;213,1192,714;152,557,649;400,1104,746;137,967,297;143,1089,249;124,1099,303;289,914,737;132,520,718;299,912,765;80,805,702;144,614,703;70,808,768;111,612,641;127,445,694;90,1082,549;169,1158,755;110,1057,326;294,1197,309;141,880,680;86,885,753;111,1099,535;504,768,736;90,1072,773;582,988,445;152,620,769;162,621,783;242,1265,78;410,1104,761;101,612,771;150,567,760;116,842,741;512,1049,643;168,629,784;418,1098,786;132,913,713;309,909,767;178,630,791;206,1047,465;240,1018,495;165,1041,398;507,758,780;551,990,440;496,761,780;66,458,747;163,827,601;107,940,676;522,795,653;230,1236,315;105,1035,526;197,1396,712;184,638,795;249,958,707;502,1049,790;153,828,803;237,1106,536;499,1059,811;317,903,794;114,488,683;96,1000,715;256,1041,576;148,1050,274;190,1229,228;349,1298,24;361,1041,509;101,1090,549;243,1114,813;110,950,804;138,1000,726;473,1278,53;369,1035,822;163,974,283;322,912,815;368,1025,828;184,648,809;194,650,832;88,994,817;240,1494,137;332,910,830;426,1104,792;201,1491,184;103,1198,749;97,943,804;359,1020,831;258,1051,818;543,862,539;393,1334,248;486,804,748;455,1190,613;91,750,686;107,714,626;373,1016,831;98,622,787;341,905,836;505,947,704;456,1338,442;121,804,656;515,945,852;324,1202,375;224,1308,579;173,1069,591;351,903,851;379,1008,849;361,901,859;104,1208,839;123,1044,681;321,1212,856;136,721,658;94,986,834;360,891,861;146,723,865;117,530,672;94,433,716;271,1451,734;366,883,867;359,1432,63;191,1490,838;247,1234,213;358,877,872;129,892,680;356,867,876;353,857,878;100,1074,781;457,1180,846;484,814,845;354,847,879;183,1157,227;252,1059,842;467,1178,881;248,1140,595;439,1302,648;94,604,787;128,882,877;256,1134,887;294,1137,381;520,1298,487;85,758,847;477,1181,886;344,1353,269;88,425,870;436,1105,837;340,1408,147;455,1170,881;117,819,698;69,448,802;104,789,627;150,630,783;512,776,670;212,1304,550;385,1000,860;373,1109,661;439,1325,9;128,455,772;78,425,897;69,420,911;71,410,912;74,400,913;486,824,882;138,454,910;73,390,914;70,380,917;73,370,918;131,655,633;127,817,901;223,1193,759;249,1106,824;148,454,916;188,1007,652;123,755,620;214,821,344;99,720,848;215,1182,759;181,1242,94;111,1043,807;265,1443,871;515,1307,893;245,1009,797;264,1128,891;376,885,872;529,818,729;302,1508,139;416,1112,786;330,1156,583;478,830,915;94,786,903;67,438,902;348,1207,611;344,846,883;211,898,338;538,1129,267;334,845,945;245,1067,885;255,1442,932;244,967,810;112,960,825;470,836,941;525,948,855;386,885,936;129,699,740;156,721,868;389,1126,699;446,1107,898;492,1046,811;461,831,953;180,931,524;80,521,752;111,851,789;533,865,843;540,1011,458;213,1153,590;288,904,765;156,460,924;163,452,969;170,444,970;455,839,961;180,445,971;190,443,973;196,435,974;202,427,975;208,419,976;213,410,977;219,402,978;225,394,979;224,384,980;230,376,981;161,1073,429;240,375,982;77,435,943;482,1046,960;250,373,984;256,365,987;262,357,988;391,894,955;459,821,961;128,465,910;131,902,877;254,351,989;271,362,989;277,354,995;283,346,996;291,340,997;249,342,994;401,896,990;301,338,998;99,1043,807;311,340,1001;179,1425,728;496,751,801;169,1425,1004;166,722,957;476,844,953;241,336,999;238,326,1009;239,316,1010;212,908,946;488,947,731;230,311,1011;275,340,997;289,894,968;318,348,1003;181,455,973;497,741,1005;224,303,1014;328,350,1017;470,1268,827;84,400,914;336,344,1021;308,1490,131;297,888,1016;218,1296,906;489,735,1019;119,479,816;249,1450,950;247,1129,891;248,1096,923;255,382,987;260,391,1033;365,1103,908;266,399,1034;334,835,948;165,712,1007;462,1262,1022;484,726,1028;363,911,861;139,870,777;269,332,1015;198,1107,709;199,1097,1044;486,846,1008;400,906,1000;88,778,942;342,352,1024;544,1165,262;209,1095,1045;526,857,965;175,710,1038;110,1216,862;343,362,1049;353,364,1055;199,414,977;266,1040,818;482,970,727;193,406,1057;91,520,752;347,1185,447;110,592,641;190,396,1060;250,1086,1032;255,1069,949;523,847,1052;324,832,1037;416,1280,520;535,947,954;462,847,972;454,1256,1039;130,827,921;333,1131,742;181,465,1018;195,1406,808;273,1432,544;520,1043,790;257,404,1036;249,1028,576;460,857,1071;353,374,1056;326,822,1068;472,1047,986;129,869,1042;260,414,1079;209,789,444;344,379,1082;461,867,1081;89,718,928;243,1078,1065;97,632,850;507,1065,814;79,783,1048;301,922,767;220,805,346;330,1341,219;329,812,1083;194,1128,376;127,859,1085;129,480,1029;357,1096,1035;130,1118,261;520,1316,933;394,1191,730;335,804,1098;229,321,1014;196,640,833;189,1285,229;372,875,872;74,477,757;206,641,1108;487,1182,895;514,935,855;214,634,1112;169,1136,506;292,1503,131;259,1104,923;342,1176,1062;243,999,934;224,631,1115;472,969,1059;250,416,1086;253,999,1120;188,1107,1044;232,637,1121;238,645,1126;456,876,1089;192,1089,1045;176,474,1075;85,768,1048;524,827,937;230,623,1121;316,819,1083;361,921,1041;248,642,1127;214,305,1020;191,386,1064;230,613,1133;258,1092,1065;211,295,1137;216,286,1141;221,277,1142;219,267,1143;209,265,1144;284,1137,892;182,702,1053;206,255,1145;263,997,1124;198,249,1148;227,261,1144;229,603,1139;233,253,1151;404,1190,1105;264,323,1043;241,247,1153;182,658,832;385,990,907;133,837,1073;248,239,1156;248,229,1160;345,806,1106;257,224,1161;266,219,1163;275,214,1164;284,209,1165;494,723,1040;314,809,1134;155,1039,798;98,681,724;357,1030,841;251,426,1123;141,654,920;238,655,1127;244,663,1174;304,810,1168;232,593,1152;211,276,1143;206,1004,608;311,1117,351;158,1174,108;254,436,1172;414,1190,1154;262,442,1182;273,999,1149;307,930,1095;256,450,1184;251,459,1187;355,929,1135;542,888,478;250,671,1175;257,467,1188;279,991,1185;261,210,1164;347,936,1189;287,1225,100;215,1042,796;200,1012,1179;492,1191,1113;147,640,904;282,1209,100;126,1299,504;293,214,1166;130,577,642;171,1049,798;239,1135,887;520,813,937;207,1208,714;299,878,1026;275,1293,659;251,681,1191;231,583,1177;259,477,1192;194,1214,602;274,393,1036;446,834,972;344,946,1195;284,396,1215;521,1069,607;269,478,1213;293,401,1218;348,877,876;342,1252,744;293,1513,938;540,938,1070;355,803,1162;268,1089,1140;223,577,1212;458,811,991;464,1041,1084;420,1182,1183;520,837,1067;456,801,1229;178,484,1130;168,487,1234;124,726,625;198,239,1150;168,497,1235;240,419,1123;179,1232,930;276,1041,1058;167,732,1007;271,488,1220;196,229,1237;190,376,1138;437,829,1216;272,498,1243;435,819,1246;195,219,1244;301,407,1221;190,210,1249;184,202,1251;491,713,1167;254,1019,1080;186,192,1252;483,707,1253;178,186,1255;253,1121,1031;294,813,1176;177,731,1242;153,838,812;179,176,1257;254,634,1136;383,980,1158;89,875,778;272,442,1184;278,1088,1227;343,956,1217;171,170,1262;161,168,1269;303,800,1176;235,1066,949;470,979,1122;309,413,1250;231,1125,696;270,1120,935;222,567,1228;496,1303,719;425,821,1248;562,980,441;485,697,1256;448,1248,1072;483,687,1281;473,685,1283;277,507,1247;171,507,1238;464,987,1273;284,1288,1210;282,441,1266;353,956,1268;454,989,1287;177,1415,1004;541,928,1225;365,804,1226;451,792,1233;132,530,766;113,970,952;272,516,1285;444,987,1291;334,948,1217;497,983,675;384,970,1264;287,997,1193;274,204,1165;281,521,1298;317,419,1274;512,1322,1104;266,524,1298;402,1114,761;98,642,1092;192,366,1245;374,799,1294;488,678,1283;488,668,1313;494,660,1314;116,998,383;463,683,1284;287,1083,1267;500,652,1315;455,677,1317;445,676,1320;437,683,1321;427,680,1322;172,969,829;410,905,1047;353,384,1088;361,390,1326;499,642,1319;505,634,1328;371,387,1327;381,388,1330;514,629,1329;263,987,1149;364,400,1327;285,1046,1241;495,696,1281;497,628,1329;451,1098,959;289,1146,892;519,620,1332;531,875,965;158,486,1235;304,790,1271;525,612,1340;380,791,1312;379,1032,828;459,1032,1230;348,1108,396;542,1021,966;492,838,1046;535,615,1344;374,783,1345;189,1418,728;316,429,1306;244,689,1211;276,1078,1267;377,773,1352;368,768,1357;504,724,1167;331,958,1300;341,966,1268;229,867,340;528,602,1344;528,592,1363;310,782,1343;100,538,671;530,582,1364;264,977,1333;209,1139,416;269,1104,1118;358,1316,176;322,437,1354;340,870,1222;121,851,964;290,434,1289;269,372,995;523,1233,157;545,617,1351;285,808,1259;287,529,1305;131,510,766;365,1090,1102;330,443,1372;370,758,1358;537,597,1363;267,196,1304;497,618,1337;174,997,295;554,622,1378;551,927,1293;273,188,1386;340,883,1222;273,178,1391;449,1031,1347;156,645,1200;207,994,1179;313,772,1365;265,172,1393;494,993,1301;416,913,1325;275,805,1379;310,762,1397;147,465,969;522,575,1367;512,573,1404;308,752,1402;190,928,962;439,1029,1394;536,1159,1050;260,163,1398;266,155,1410;510,643,1329;502,571,1405;240,989,1120;89,865,1265;434,1020,1408;248,983,1414;275,150,1411;220,326,1107;346,891,1392;503,561,1413;339,448,1383;255,624,1263;274,140,1418;182,365,1311;502,1324,1307;504,551,1421;432,1037,1408;271,130,1424;559,613,1389;188,1195,527;276,121,1429;256,523,1308;530,835,1132;212,1251,384;552,1023,1349;282,113,1432;292,113,1437;302,113,1438;312,113,1439;322,113,1440;274,107,1437;373,1084,1382;264,108,1442;416,816,1279;272,815,1401;328,121,1441;338,121,1447;348,121,1448;358,121,1449;368,121,1450;259,99,1444;376,127,1451;386,126,1453;396,125,1454;406,123,1455;494,550,1427;310,742,1406;326,131,1447;133,1028,681;412,131,1456;235,1008,934;407,140,1461;365,410,1334;493,540,1457;316,734,1458;413,148,1463;412,115,1456;422,115,1468;432,115,1469;442,115,1470]

points_in_right_circle =  [
    558,1189; 616, 1556; 
    531, 1259; 493, 1306;
    487, 1281; 445, 1236;
    429, 1283; 321, 1243; 
    
];

map = im2bw(imread('dst_dilated.jpg'));
map_with_color = imread('cricle.png');

if true,imshow(map_with_color);rectangle('position',[1 1 size(map)-1],'edgecolor','k'); end

for i = 1:length(cities)
    waitforbuttonpress;
    path = rrt_path_planning(map, source, cities(i,:), true);
    line(path(:, 2), path(:, 1), 'linewidth', 2, 'color', 'r');
end

%%
% rrt_path_planning - RRT path plannign function
%
% Syntax: path_res = rrt_path_planning(map, source, goal, display)
% map : the binary image 
% source : the lander zone 
% goal : the target zone (cities or hotpitals)
% display : (true : enable display the track) / (false : disable display the track)
% Long description
function path_res = rrt_path_planning(map, source, goal, display)

    %% RRT parameters
    stepsize = 10;  % size of each step of the RRT
    threshold = 10; % nodes closer than this threshold are taken as almost the same
    maxFailedAttempts = 20000;

    if ~feasiblePoint(source,map), error('source lies on an obstacle or outside map'); end
    if ~feasiblePoint(goal,map), error('goal lies on an obstacle or outside map'); end

    tic;  % tic-toc: Functions for Elapsed Time

    RRTree = double([source -1]); % RRT rooted at the source, representation node and parent index
    failedAttempts = 0;
    counter = 0;
    pathFound = false;

    while failedAttempts <= maxFailedAttempts  % loop to grow RRTs
        %% chooses a random configuration
        if rand < 0.5
            sample = rand(1,2) .* size(map);   % random sample
        else
            sample = goal; % sample taken as goal to bias tree generation to goal
        end
        
        %% selects the node in the RRT tree that is closest to qrand
        [A, I] = min( distanceCost(RRTree(:,1:2),sample) ,[],1); % find the minimum value of each column
        closestNode = RRTree(I(1),1:2);
        
        %% moving from qnearest an incremental distance in the direction of qrand
        theta = atan2(sample(1)-closestNode(1),sample(2)-closestNode(2));  % direction to extend sample to produce new node
        newPoint = double(int32(closestNode(1:2) + stepsize * [sin(theta)  cos(theta)]));
        if ~checkPath(closestNode(1:2), newPoint, map) % if extension of closest node in tree to the new point is feasible
            failedAttempts = failedAttempts + 1;
            continue;
        end
        
        if distanceCost(newPoint,goal) < threshold, pathFound = true; break; end % goal reached
        
        [A, I2] = min( distanceCost(RRTree(:,1:2),newPoint) ,[],1); % check if new node is not already pre-existing in the tree
        if distanceCost(newPoint,RRTree(I2(1),1:2)) < threshold, failedAttempts = failedAttempts + 1; continue; end 
        
        RRTree = [RRTree; newPoint I(1)]; % add node
        failedAttempts = 0;
        if display, line([closestNode(2);newPoint(2)],[closestNode(1);newPoint(1)], 'linewidth', 2, 'color', 'r');counter = counter + 1; M(counter) = getframe; end % Capture movie frame 
    end

    % getframe returns a movie frame, which is a structure having two fields
    if display && pathFound, line([closestNode(2);goal(2)],[closestNode(1);goal(1)]); counter = counter+1;M(counter) = getframe; end

    if display, disp('Path found.');  end
    if ~pathFound, error('no path found. maximum attempts reached'); end

    %% retrieve path from parent information
    path = [goal];
    prev = I(1);
    while prev > 0
        path = [RRTree(prev,1:2); path];
        prev = RRTree(prev,3);
    end

    pathLength = 0;
    for i=1:length(path)-1, pathLength = pathLength + distanceCost(path(i,1:2),path(i+1,1:2)); end % calculate path length
    fprintf('processing time=%d \nPath Length=%d \n\n', toc, pathLength); 
    path_res = path;
end


%% distanceCost.m
function h=distanceCost(a,b)
	h = sqrt(sum((a-b).^2, 2));
end
	
%% checkPath.m	
function feasible=checkPath(n,newPos,map)
feasible=true;
dir=atan2(newPos(1)-n(1),newPos(2)-n(2));
for r=0:0.5:sqrt(sum((n-newPos).^2))
    posCheck=n+r.*[sin(dir) cos(dir)];
    if ~(feasiblePoint(ceil(posCheck),map) && feasiblePoint(floor(posCheck),map) && ... 
            feasiblePoint([ceil(posCheck(1)) floor(posCheck(2))],map) && feasiblePoint([floor(posCheck(1)) ceil(posCheck(2))],map))
        feasible=false;break;
    end
    if ~feasiblePoint(newPos,map), feasible=false; end
end
end


%% feasiblePoint.m
function feasible=feasiblePoint(point,map)
feasible=true;
% check if collission-free spot and inside maps
if ~(point(1)>=1 && point(1)<=size(map,1) && point(2)>=1 && point(2)<=size(map,2) && map(point(1),point(2))==1)
    feasible=false;
end
end